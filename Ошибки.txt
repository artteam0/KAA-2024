ERROR_ENTRY(100, "[ SYSTEM ] Параметр -in должен быть задан"): изменение имени входного файла.

ERROR_ENTRY(101, "[ SYSTEM ] Превышена длина входного параметра"): название больше 10 символов.

ERROR_ENTRY(102, "[ SYSTEM ] Ошибка при открытии файла с исходным кодом (-in)"): хз

ERROR_ENTRY(103, "[ SYSTEM ] Ошибка при создании файла протокола (-log)"): название или путь к файлу.

ERROR_ENTRY(200, "[ LEXICAL ] Недопустимый символ в исходном файле (-in)"): неразрешенный символ из таблицы In.

ERROR_ENTRY(201, "[ LEXICAL ] Превышен размер таблицы лексем"): более 4096.

ERROR_ENTRY(202, "[ LEXICAL ] Переполнение таблицы лексем"): слишком много элементов в таблице лексем.

ERROR_ENTRY(203, "[ LEXICAL ] Превышен размер таблицы идентификаторов"): больше 4096 строк.

ERROR_ENTRY(205, "[ LEXICAL ] Неизвестная последовательность символов"): последовательность типа }&.

ERROR_ENTRY(300, "[ SEMANTIC ] Не закрыт строковый литерал"): ["Artsiom];

ERROR_ENTRY(301, "[ SEMANTIC ] Ожидается тип bool"): хз.

ERROR_ENTRY(302, "[ SEMANTIC ] Отсутствует точка входа main"): понятно.

ERROR_ENTRY(303, "[ SEMANTIC ] Задано более одной точки входа main"): ясно.

ERROR_ENTRY(304, "[ SEMANTIC ] Превышен размер строкового литерала"): дохуя.

ERROR_ENTRY(305, "[ SEMANTIC ] Объявление переменной без ключевого слова ann недопустимо"): ну ясно.

ERROR_ENTRY(306, "[ SEMANTIC ] Необъявленный идентификатор"): ок.

ERROR_ENTRY(307, "[ SEMANTIC ] Недопустимо объявление переменной без указания типа"): аок.

ERROR_ENTRY(308, "[ SEMANTIC ] Попытка реализовать уже существующую функцию"): дубль.

ERROR_ENTRY(309, "[ SEMANTIC ] Попытка переопределить формальный параметр функции"):  
переопределение параметра))

ERROR_ENTRY(310, "[ SEMANTIC ] Попытка переопределить переменную"): делаешь.

ERROR_ENTRY(311, "[ SEMANTIC ] Не указан тип функции"): ну не указывай.

ERROR_ENTRY(315, "[ SEMANTIC ] Несовпадение типов передаваемых параметров"): =)

ERROR_ENTRY(316, "[ SEMANTIC ] Слишком много аргументов в вызове функции"): более 3.

ERROR_ENTRY(317, "[ SEMANTIC ] Слишком мало аргументов в вызове функции"): =/

ERROR_ENTRY(318, "[ SEMANTIC ] Использование пустого строкового литерала недопустимо"): 0.

ERROR_ENTRY(319, "[ SEMANTIC ] Недопустимый целочисленный литерал"): превышение инта.

ERROR_ENTRY(320, "[ SEMANTIC ] Типы данных в выражении не совпадают"): не в функции.

ERROR_ENTRY(321, "[ SEMANTIC ] Арифметические операторы могут применяться только с целочисленными типами"): ann line c = h * p;

ERROR_ENTRY(322, "[ SEMANTIC ] Логические операторы могут применяться только с целочисленными типами"): джаз.

ERROR_ENTRY(323, "[ SEMANTIC ] Деление на ноль (Ошибка в выражении)"): не в функции.

ERROR_ENTRY(324, "[ SEMANTIC ] Имя идентификатора больше 10"): хз.

ERROR_ENTRY(600, "[ SYNTAX ] Неверная структура программы"): что хочешь.

ERROR_ENTRY(601, "[ SYNTAX ] Отсутствует список параметров функции при её объявлении"): без [].

ERROR_ENTRY(602, "[ SYNTAX ] Ошибка в параметрах функции при её объявлении"): джаз.

ERROR_ENTRY(603, "[ SYNTAX ] Возможно отсутствует тело функции"): хорошо.

ERROR_ENTRY(604, "[ SYNTAX ] Недопустимое выражение. Ожидаются только литералы и идентификаторы"): хз.

ERROR_ENTRY(605, "[ SYNTAX ] Возможно отсутствует тело процедуры"): как скажешь.

ERROR_ENTRY(606, "[ SYNTAX ] Неверная конструкция в теле функции"): ф в ф.

ERROR_ENTRY(607, "[ SYNTAX ] Ошибка в условном выражении"): хз

ERROR_ENTRY(608, "[ SYNTAX ] Ошибка в вызове функции"): хз

ERROR_ENTRY(609, "[ SYNTAX ] Ошибка в арифметическом выражении"): хз

ERROR_ENTRY(610, "[ SYNTAX ] Ошибка в списке параметров при вызове функции"): хз

ERROR_ENTRY(611, "[ SYNTAX ] Неверная конструкция в теле цикла/условного выражения"): хз

ERROR_ENTRY(612, "[ SYNTAX ] Требуется закрывающаяся фигурная скобка"): ок.

ERROR_ENTRY(613, "[ SYNTAX ] Требуется открывающаяся фигурная скобка"): ок.


